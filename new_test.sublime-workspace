{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"r",
				"rstrip"
			],
			[
				"so",
				"sorted"
			],
			[
				"f",
				"f"
			],
			[
				"lin",
				"line"
			],
			[
				"sp",
				"split"
			],
			[
				"Aver",
				"average"
			],
			[
				"t",
				"t"
			],
			[
				"fri",
				"friend"
			],
			[
				"frien",
				"friend"
			],
			[
				"fr",
				"friends"
			],
			[
				"in",
				"integ"
			],
			[
				"cou",
				"count"
			],
			[
				"coun",
				"continue"
			],
			[
				"mbox-sh",
				"mbox-short"
			],
			[
				"flo",
				"floatint"
			],
			[
				"gree",
				"greetstrip"
			],
			[
				"greet",
				"greetr"
			],
			[
				"stuff",
				"stuffcap"
			],
			[
				"lag",
				"largest_so_far"
			],
			[
				"the",
				"the_num"
			],
			[
				"largest",
				"largest_so_far"
			],
			[
				"larg",
				"largest_so_far"
			],
			[
				"grade",
				"gradef"
			],
			[
				"p",
				"payf"
			],
			[
				"ra",
				"rate"
			],
			[
				"pay",
				"payf"
			],
			[
				"ov",
				"overtime"
			],
			[
				"ove",
				"over"
			],
			[
				"raw",
				"raw_input"
			],
			[
				"try",
				"try	Try/Except"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "name = raw_input(\"Enter file:\")\nif len(name) < 1 : name = \"mbox-short.txt\"\nhandle = open(name)\ncounts = dict()\nfor line in handle:\n    words = line.split()\n    if len(words) < 2 : continue\n    if words[0] != \"From\" : continue\n    email = words[1]\n    #print email\n    counts[email] = counts.get(email,0) + 1\nbigcount = None\nbigname = None\nfor name,count in counts.items():\n    if bigname is None or count > bigcount:\n        bigname = name\n        bigcount = count\nprint bigname, bigcount",
			"file": "junk.py",
			"file_size": 487,
			"file_write_time": 130819041105160109,
			"settings":
			{
				"buffer_size": 488,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#Tuples are like lists\nx = ('Glenn', 'Sally', 'Joseph')\nprint x[2]\ny = (1, 9, 2)\nprint max(y)\n\ny = (1, 9, 2)\nfor iter in y:\n	print iter\n\n#But Tuples are \"immutable\"\n	#Unlike lists once you create a tuple, you cannot alter its contents - smilar to a string\n	# a tale of two Sequences\n	l = list()\n	dir(l)\n	\n\n	t = tuple()\n	dir(t)\n\n#Tuples and assignments\n(x,y) = (4, 'fred')\nprint y\n\n(a,b) = (99, 98)\nprint a\n\n#Tulpes and dictionaries\nd = dict()\nd['csev'] = 2\nd['cwen'] = 4\nfor (k,v) in d.items():\n	print k, v\n\ntups = d.items()\nprint tups\n\n#Tuples are compareable\nq = (0,1,2) < (5,1,2)\nprint q\n\n#Sorting lists of tuples\n\nd = {'a':10, 'b':1, 'c':22}\nt = d.items()\nprint t\n\nt.sort()\nprint t\n\n#Using sorted()\nd = {'a':10, 'b':1, 'c':22}\nd.items()\nt = sorted(d.items())\nprint t\n\nfor k, v in sorted(d.items()):\n	print k, v\n\n#Sort by values instead of key\nc = {'a':10, 'b':1, 'c':22}\ntmp = list()\nfor k, v in c.items():\n	tmp.append( (v,k) )\n\nprint tmp\ntmp.sort(reverse=True)\nprint tmp\n\n#Top ten most common words\nfhand = open('romeo.txt')\ncounts = dict()\nfor line in fhand:\n	words = line.split()\n	for word in words:\n		counts[word] = counts.get(word, 0) + 1\n\nlst = list()\nfor key, val in counts.items():\n	lst.append( (val, key) )\n\nlst.sort(reverse=True)\n\nfor val, key in lst[:10] :\n	print key, val\n\n\n#Even shoter version\nc = {'a':10, 'b':1, 'c':22}\nprint sorted ( [ (v,k) for k,v in c.items() ] )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"file": "tuples.py",
			"file_size": 1391,
			"file_write_time": 130819320126195206,
			"settings":
			{
				"buffer_size": 1420,
				"line_ending": "Unix"
			}
		},
		{
			"file": "assingment10.py",
			"settings":
			{
				"buffer_size": 439,
				"line_ending": "Unix",
				"name": "name = raw_input(\"Enter file:\")"
			}
		},
		{
			"file": "test_9.py",
			"settings":
			{
				"buffer_size": 50,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Regular_Expressions.py",
			"settings":
			{
				"buffer_size": 1249,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dictionaries.py",
			"settings":
			{
				"buffer_size": 2146,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 75.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/joe/Documents/python_class/python_test/assignment9_1.py",
		"/home/joe/Documents/python_class/python_test/newtest.py",
		"/home/joe/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/joe/Documents/python_class/python_test/dictionaries.py",
		"/home/joe/Documents/python_class/python_test/Assignment8_2.py",
		"/home/joe/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/joe/Documents/python_class/python_test/lists.py",
		"/home/joe/Documents/python_class/python_test/Assigment8_1.py",
		"/home/joe/Documents/python_class/python_test/testlist.py",
		"/home/joe/Documents/python_class/python_test/worded_chapter8.py",
		"/home/joe/Documents/python_class/python_test/strings.py",
		"/home/joe/Documents/python_class/python_test/assignment6.py",
		"/home/joe/Documents/python_class/python_test/files.py",
		"/home/joe/Documents/python_class/python_test/assignment7_1.py",
		"/home/joe/Documents/python_class/python_test/Functions.py",
		"/home/joe/Documents/python_class/python_test/assignment7_2.py",
		"/home/joe/Documents/python_class/python_test/mirantistest.py",
		"/home/joe/Documents/python_class/python_test/quiz6.py",
		"/home/joe/Documents/python_class/python_test/loops_iterations.py",
		"/home/joe/Documents/python_class/python_test/loop_idioms.py",
		"/home/joe/Documents/python_class/python_test/largest_smallest.py",
		"/home/joe/Documents/python_class/python_test/assignment5_1.py",
		"/home/joe/Documents/python_class/python_test/assignment5_2.py",
		"/home/joe/Documents/python_class/python_test/test55.py",
		"/home/joe/Documents/python_class/python_test/test5.py",
		"/home/joe/Documents/python_class/python_test/functions_hw.py",
		"/home/joe/Documents/python_class/python_test/try_except.py",
		"/home/joe/Documents/python_class/python_test/joe.py",
		"/home/joe/Documents/python_class/python_test/python_class_3.py",
		"/home/joe/Documents/python_class/python_test/grade.py",
		"/home/joe/Documents/python_class/python_test/additiontest.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "junk.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 488,
						"regions":
						{
						},
						"selection":
						[
							[
								488,
								488
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tuples.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1420,
						"regions":
						{
						},
						"selection":
						[
							[
								284,
								284
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assingment10.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 439,
						"regions":
						{
						},
						"selection":
						[
							[
								439,
								439
							]
						],
						"settings":
						{
							"auto_name": "name = raw_input(\"Enter file:\")",
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test_9.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50,
						"regions":
						{
						},
						"selection":
						[
							[
								38,
								38
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Regular_Expressions.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1249,
						"regions":
						{
						},
						"selection":
						[
							[
								1146,
								1146
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "dictionaries.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2146,
						"regions":
						{
						},
						"selection":
						[
							[
								1436,
								1436
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 570.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "new_test.py",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
